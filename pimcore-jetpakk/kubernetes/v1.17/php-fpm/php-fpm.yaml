apiVersion: v1
kind: Service
metadata:
  name: pimcore-website-fpm
  labels:
    app: pimcore-website
  annotations:
spec:
  type: ClusterIP
  ports:
  - name: apache
    port: 80
    targetPort: 80
  - name: pimcore-website-fpm
    port: 9000
    targetPort: http
  - name: metrics
    port: 9117
    targetPort: metrics
  selector:
    app: pimcore-website-fpm

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pimcore-website-fpm
  labels:
    app: pimcore-website-fpm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  selector:
    matchLabels:
      app: pimcore-website-fpm
  template:
    metadata:
      labels:
        app: pimcore-website-fpm
    spec:
      hostAliases:
      - hostnames:
        - php
        ip: 127.0.0.1
      containers:
      - name: pimcore-website-fpm
        image: "k-registry.krankikom.de/krankikom/pimcore-website:master"
        imagePullPolicy: "IfNotPresent"
        resources:
          limits:
            cpu: 4000m
            memory: 2048Mi
          requests:
            cpu: 2000m
            memory: 1256Mi
        env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: config-secret
              key: mysql-password
        - name: FCGI_CONNECT
          value: localhost:9001
        - name: RUN_DISTVAR_SYNC
          value: "1"
        envFrom:
        - configMapRef:
            name: pimcore-config
        ports:
        - name: fcgi
          containerPort: 9000
        volumeMounts:
        - name: media-data
          mountPath: /var/www/html/var
        - name: media-web-data
          mountPath: /var/www/html/public/var
        livenessProbe:
          exec:
              command:
                  - /php-fpm-healthcheck
                  - --listen-queue=10 # fails if there are more than 10 processes waiting in the fpm queue
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
              command:
                  - /php-fpm-healthcheck # a simple ping since this means it's ready to handle traffic
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      - name: apache
        image: "k-registry.krankikom.de/library/apache-fcgi"
        imagePullPolicy: "IfNotPresent"
        ports:
        - name: http
          containerPort: 80
        resources:
          limits:
            cpu: 4000m
            memory: 2048Mi
          requests:
            cpu: 2000m
            memory: 1024Mi
        env:
          - name: APACHE_DOCUMENT_ROOT
            value: /var/www/html/public
        volumeMounts:
          - name: media-web-data
            mountPath: /var/www/html/public/var
          - mountPath: /etc/apache2/sites-available/
            name: apacheconf
            readOnly: true
      - image: lusotycoon/apache-exporter
        name: apache-exporter
        command:
            - '/bin/apache_exporter'
            - '--insecure'
            - '--log.level=debug'
            - '--scrape_uri=http://127.0.0.1/server-status/?auto'
        ports:
          - containerPort: 9117
        resources:
         limits:
          memory: "128Mi"
          cpu: "250m"
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9117
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /metrics
            port: 9117
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 60
      - name: metrics
        image: "hipages/php-fpm_exporter"
        imagePullPolicy: "IfNotPresent"
        #command: ['/php-fpm_exporter','server --web.listen-address :9253 --phpfpm.scrape-uri ']
        env:
          - name: PHP_FPM_SCRAPE_URI
            value: tcp://127.0.0.1:9001/status
        ports:
        - name: metrics
          containerPort: 9253
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics
          initialDelaySeconds: 5
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 128Mi
      imagePullSecrets:
      - name: "github"
      - name: "kk-registry-secret"
      volumes:
      - name: media-data
        persistentVolumeClaim:
          claimName: media-data
      - name: media-web-data
        persistentVolumeClaim:
          claimName: media-web-data
      - name: apacheconf
        configMap:
          name: apacheconf
          defaultMode: 256
          optional: false
      # - name: extras
      #   emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: apacheconf
data:
  000-default.conf: |-
      <VirtualHost *:80>

        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName www.example.com

        ServerAdmin webmaster@localhost
        DocumentRoot ${APACHE_DOCUMENT_ROOT}

          <FilesMatch "\.php$">
              <If "%{HTTP_COOKIE} =~ /XDEBUG_SESSION/">
                  SetHandler proxy:fcgi://127.0.0.1:9999
              </If>
              <Else>
                  SetHandler proxy:fcgi://127.0.0.1:9000
              </Else>
          </FilesMatch>

          <Directory "${APACHE_DOCUMENT_ROOT}">
              Options FollowSymLinks
              AllowOverride All

              Order allow,deny
              Allow from all
          </Directory>

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
          LogFormat "%{X-Forwarded-For}i %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" xcombined
        CustomLog ${APACHE_LOG_DIR}/access.log xcombined

          <Location ~ "(.*)(jpg|png|gif|webp|svg|woff2)">
              ExpiresActive on
              ExpiresDefault "access plus 21600 seconds"
              </Location>
          <Location ~ "/css/">
              ExpiresActive on
              ExpiresDefault "access plus 31536001 seconds"
          </Location>
          <Location ~ "/js/">
              ExpiresActive on
              ExpiresDefault "access plus 31536002 seconds"
          </Location>
          <Location /images/>
              ExpiresActive on
              ExpiresDefault "access plus 31536003 seconds"
              </Location>
          <Location ~ "(.*)/image-thumb(.*)">
              ExpiresActive on
              ExpiresDefault "access plus 31536004 seconds"
          </Location>


        # For most configuration files from conf-available/, which are
        # enabled or disabled at a global level, it is possible to
        # include a line for only one particular virtual host. For example the
        # following line enables the CGI configuration for this host only
        # after it has been globally disabled with "a2disconf".
        #Include conf-available/serve-cgi-bin.conf
      </VirtualHost>
